gzip_vary on; # cf http://blog.maxcdn.com/accept-encoding-its-vary-important/
gzip_proxied any;
gzip_types *;

# http://nginx.org/en/docs/http/configuring_https_servers.html#optimization
ssl_session_cache shared:SSL:1m;
ssl_session_timeout 10m;

server_tokens off;

# Rewrite all HTTP to HTTPS
server {
  listen 80 default_server;
  server_name ##NGINX_SERVER_NAME##;

  location / {
    return 301 https://$http_host$request_uri;
  }
  
  include snippets/letsencrypt.conf;
}

# Rewrite all WWW to no-WWW
server {
  listen 80;
  server_name www.##NGINX_SERVER_NAME##;

  location / {
    return 301 https://##NGINX_SERVER_NAME##$request_uri;
  }
  
  include snippets/letsencrypt.conf;
}

# Rewrite all WWW to no-WWW
server {
  listen 443 ssl http2;
  server_name www.##NGINX_SERVER_NAME##;

  location / {
    return 301 https://##NGINX_SERVER_NAME##$request_uri;
  }
  
  ssl_trusted_certificate ##CERT_PATH##/fullchain.pem;
  ssl_certificate         ##CERT_PATH##/fullchain.pem;
  ssl_certificate_key     ##CERT_PATH##/privkey.pem;
  
  include snippets/letsencrypt.conf;
  include snippets/ssl.conf;
}

server {
  listen 443 ssl http2 default_server;
  server_name ##NGINX_SERVER_NAME##;
  
  charset utf-8;

  root /srv/www;
  index index.php index.html index.htm;

  # see http://nginx.org/en/docs/http/configuring_https_servers.html
  # see https://michael.lustfield.net/nginx/getting-a-perfect-ssl-labs-score
  # and https://community.centminmod.com/threads/letsencrypt-free-ssl-certificates-with-web-root-authentication-method.4635/
  
  ssl_trusted_certificate ##CERT_PATH##/fullchain.pem;
  ssl_certificate         ##CERT_PATH##/fullchain.pem;
  ssl_certificate_key     ##CERT_PATH##/privkey.pem;

  access_log /var/log/nginx/##NGINX_SERVER_NAME##.default.log;
  
  # Prevent serving of sysfiles / vim backup files
  location ~ ^/data/public/ {
    allow all;
  }
  location ~* ^/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
    deny all;
  }
  # location ~ ^/conf       { deny all; }
  location = /robots.txt  { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; }
  location ~ /\.          { access_log off; log_not_found off; deny all; }
  location ~ ~$           { access_log off; log_not_found off; deny all; }

  # Only allow these request methods and do not accept DELETE, SEARCH and other methods
  if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
    return 444;
  }

  location @shares {
    rewrite ^ /dav.php;
  }
  location ~ ^/index { }
  location ~ ^/plugins { }
  location ~ ^/shares {
    try_files $uri $uri/ @shares;
  }
  location ~ ^/user {
    rewrite ^ /index.php?get_action=user_access_point last;
  }
  location ~ ^/api {
    rewrite ^ /rest.php last;
  }
  
  location ~ ^/data/ { internal; }
  proxy_set_header X-Sendfile-Type X-Accel-Redirect;
  proxy_set_header X-Accel-Mapping /srv/www/data/=/data/;
  fastcgi_param X-Accel-Mapping /srv/www/data/=/data/;
  
  rewrite ^/data/public/([a-zA-Z0-9_-]+)\.php$ /data/public/share.php?hash=$1 last;
  rewrite ^/data/public/([^=&\?]+)$ /data/public/share.php?hash=$1 last;
  client_max_body_size 2047m;
  
  location / {
    rewrite ^/(dashboard|welcome|settings|ws-) /index.php last;
    
    location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

      fastcgi_pass unix:/php/php.sock;
      fastcgi_index index.php;
      
      include fastcgi_params;
      fastcgi_param	SCRIPT_FILENAME	/srv/www$fastcgi_script_name;
      fastcgi_param	DOCUMENT_ROOT	/srv/www;
      fastcgi_read_timeout 240;
    }
  }
  
  include snippets/letsencrypt.conf;
  include snippets/ssl.conf;
}
