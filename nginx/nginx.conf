# see http://nginx.org/en/docs/http/configuring_https_servers.html
# see https://michael.lustfield.net/nginx/getting-a-perfect-ssl-labs-score
# and https://community.centminmod.com/threads/letsencrypt-free-ssl-certificates-with-web-root-authentication-method.4635/

ssl_trusted_certificate /etc/nginx/fullchain.pem;
ssl_certificate         /etc/nginx/fullchain.pem;
ssl_certificate_key     /etc/nginx/privkey.pem;

# http://nginx.org/en/docs/http/configuring_https_servers.html#optimization
ssl_session_cache shared:SSL:1m;
ssl_session_timeout 10m;

# mozilla recommended
ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!CAMELLIA;
ssl_prefer_server_ciphers   on;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # ie defaults minus SSLv3

# ssl_dhparam /etc/nginx/dhparam.pem;

ssl_buffer_size 1400;
ssl_session_tickets on;

# enable ocsp stapling
# note: with default cert you'll get: [warn] "ssl_stapling" ignored, no OCSP responder URL in the certificate
# ssl_stapling on;
# ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=10m;
resolver_timeout 10s;

server_tokens off;

# Rewrite all HTTP to HTTPS and no-WWW
server {
  listen 80 default_server;
  server_name ~^(www\.)?(?<domain>.+)$;

  location / {
    return 301 https://$domain$request_uri;
  }
  
  include letsencrypt.conf;
}

# Rewrite all HTTPS WWW to no-WWW
server {
  listen 443 ssl http2;
  server_name ~^www\.?(?<domain>.+)$;

  location / {
    return 301 https://$domain$request_uri;
  }
  
  include letsencrypt.conf;
}

# proxy booster
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream websocket {
    server booster:8090;
}

# Actual definition:
server {
  listen 443 ssl http2 default_server;
  server_name ~^(?<domain>.+)$;
  include pydio.conf;
}

# For internal use: 
server {
  listen 880;
  server_name nginx;
  set $domain nginx;
  include pydio.conf;
}
