# see http://nginx.org/en/docs/http/configuring_https_servers.html
# see https://michael.lustfield.net/nginx/getting-a-perfect-ssl-labs-score
# and https://community.centminmod.com/threads/letsencrypt-free-ssl-certificates-with-web-root-authentication-method.4635/

ssl_trusted_certificate /etc/nginx/fullchain.pem;
ssl_certificate         /etc/nginx/fullchain.pem;
ssl_certificate_key     /etc/nginx/privkey.pem;

# http://nginx.org/en/docs/http/configuring_https_servers.html#optimization
ssl_session_cache shared:SSL:1m;
ssl_session_timeout 10m;

# mozilla recommended
ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!CAMELLIA;
ssl_prefer_server_ciphers   on;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # ie defaults minus SSLv3

# ssl_dhparam /etc/nginx/dhparam.pem;

ssl_buffer_size 1400;
ssl_session_tickets on;

# enable ocsp stapling
# note: with default cert you'll get: [warn] "ssl_stapling" ignored, no OCSP responder URL in the certificate
# ssl_stapling on;
# ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=10m;
resolver_timeout 10s;

server_tokens off;

# Rewrite all HTTP to HTTPS and no-WWW
server {
  listen 80 default_server;
  server_name ~^(www\.)?(?<domain>.+)$;

  location / {
    return 301 https://$domain$request_uri;
  }
  
  include letsencrypt.conf;
}

# Rewrite all HTTPS WWW to no-WWW
server {
  listen 443 ssl http2;
  server_name ~^www\.?(?<domain>.+)$;

  location / {
    return 301 https://$domain$request_uri;
  }
  
  include letsencrypt.conf;
}

# Actual definition
server {
  listen 443 ssl http2 default_server;
  server_name _;
  
  charset utf-8;

  root /srv/www;
  index index.php index.html index.htm;

  access_log /var/log/nginx/access.log;
  
  # Prevent serving of sysfiles / vim backup files
  location ~ ^/data/public/ {
    allow all;
  }

  location ~* ^/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
    deny all;
  }

  # location ~ ^/conf       { deny all; }
  location = /robots.txt  { access_log off; log_not_found off; }
  location = /favicon.ico { access_log off; log_not_found off; }
  location ~ /\.          { access_log off; log_not_found off; deny all; }
  location ~ ~$           { access_log off; log_not_found off; deny all; }

  # Only allow these request methods and do not accept DELETE, SEARCH and other methods
  if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
    return 444;
  }

  location @shares {
    rewrite ^ /dav.php;
  }
  location ~ ^/index { }
  location ~ ^/plugins { }
  location ~ ^/shares {
    try_files $uri $uri/ @shares;
  }
  location ~ ^/user {
    rewrite ^ /index.php?get_action=user_access_point last;
  }
  
  location ~ ^/data/ { internal; }
  proxy_set_header X-Sendfile-Type X-Accel-Redirect;
  proxy_set_header X-Accel-Mapping /srv/www/data/=/data/;
  fastcgi_param X-Accel-Mapping /srv/www/data/=/data/;
  
  rewrite ^/data/public/([a-zA-Z0-9_-]+)\.php$ /data/public/share.php?hash=$1 last;
  rewrite ^/data/public/([^=&\?]+)$ /data/public/share.php?hash=$1 last;
  client_max_body_size 2047m;
  
  location / {
    rewrite ^/(dashboard|welcome|settings|ws-|api) /index.php last;
    
    location ~ \.php$ {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

      fastcgi_pass unix:/php/php.sock;
      fastcgi_index index.php;
      
      include fastcgi_params;
      fastcgi_param	SCRIPT_FILENAME	/srv/www$fastcgi_script_name;
      fastcgi_param	DOCUMENT_ROOT	/srv/www;
      fastcgi_read_timeout 240;
    }
  }

  # security:
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  add_header X-Content-Type-Options "nosniff";
  # Prevent Clickjacking
  add_header X-Frame-Options "SAMEORIGIN";
  # add_header X-Frame-Options DENY;

  # proxy booster
  location ~ ^/(ws|io|admin) {
    proxy_pass http://booster:8090;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  include letsencrypt.conf;
}
